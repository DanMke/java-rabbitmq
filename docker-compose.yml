version: '3.8'

services:
  mongo-express:
    image: mongo-express:1.0.0-alpha
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
    networks:
      - order-network
    restart: always

  mongo:
    image: mongo:6.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    # volumes:
    #   - ./data:/data/db
    networks:
      - order-network
    restart: always

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - order-network
    restart: always

  create-order:
    build:
      context: ./create-order
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - ORDER_EXCHANGE=order.exchange
      - ORDER_QUEUE=order.queue
      - ORDER_ROUTINGKEY=order.routingkey
    depends_on:
      - rabbitmq
    restart: always
    ports:
      - 8080:8080
    networks:
      - order-network
    volumes:
      - .m2-create-order:/root/.m2
    stdin_open: true
    tty: true
  save-order:
    build:
      context: ./save-order
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - ORDER_QUEUE=order.queue
      - MONGODB_AUTHENTICATION_DATABASE=admin
      - MONGODB_USER=root
      - MONGODB_PASSWORD=root
      - MONGODB_DATABASE=OrderDB
      - MONGODB_PORT=27017
      - MONGODB_HOST=mongo
      - SERVER_PORT=8082
    depends_on:
      - rabbitmq
      - create-order
    restart: always
    ports:
      - 8082:8082
    networks:
      - order-network
    volumes:
      - .m2-save-order:/root/.m2
    stdin_open: true
    tty: true

networks:
  order-network:
    driver: bridge
